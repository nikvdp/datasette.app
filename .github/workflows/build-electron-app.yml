on:
  push:
    branches: 
    - main
    # tags:
    # - v*

jobs:
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure Node caching
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Build standalone datasette bundle 
      run: ./build/build-datasette-bin.sh

    - name: Upload datasette bundle tarball as artifact
      uses: actions/upload-artifact@v2
      with:
        name: datasette-bundle-macos-x64.tar.gz
        path: ./artifacts/datasette.tar.gz

    - name: Install Node dependencies
      run: npm install

    - name: Build electron app
      run: |
        export GH_TOKEN="${{secrets.GITHUB_TOKEN}}"
        npx electron-builder

    - name: Store electron-builder artifact(s) 
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        cp dist/datasette-app-*.dmg "$GITHUB_WORKSPACE/artifacts/datasette.dmg"

    - name: Upload datasette bundle tarball as artifact
      uses: actions/upload-artifact@v2
      with:
        name: datasette.dmg
        path: ./artifacts/datasette.dmg
